Description: >
    This template deploys an Fargate cluster that is in a VPC and subnets
    using an Auto Scaling Group

Parameters:

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String

    Subnets:
        Description: Choose which subnets this ECS cluster should be deployed to
        Type: List<AWS::EC2::Subnet::Id>

Resources:

    ECSCluster:
        Type: AWS::ECS::Cluster
        Properties:
            ClusterName: !Ref EnvironmentName

    ECSAutoScalingGroup:
        Type: AWS::AutoScaling::AutoScalingGroup
        Properties:
            VPCZoneIdentifier: !Ref Subnets
            LaunchConfigurationName: !Ref ECSLaunchConfiguration
            MinSize: !Ref ClusterSize
            MaxSize: !Ref ClusterSize
            DesiredCapacity: !Ref ClusterSize
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName} ECS host
                  PropagateAtLaunch: true
        CreationPolicy:
            ResourceSignal:
                Timeout: PT15M
        UpdatePolicy:
            AutoScalingRollingUpdate:
                MinInstancesInService: 1
                MaxBatchSize: 1
                PauseTime: PT15M
                SuspendProcesses:
                  - HealthCheck
                  - ReplaceUnhealthy
                  - AZRebalance
                  - AlarmNotification
                  - ScheduledActions
                WaitOnResourceSignals: true

    ECSServiceAutoScalingRole:
        Type: AWS::IAM::Role
        Properties:
            AssumeRolePolicyDocument:
                Version: '2012-10-17'
                Statement:
                    Action:
                    - 'sts:AssumeRole'
                    Effect: Allow
                    Principal:
                        Service:
                        - application-autoscaling.amazonaws.com
            Path: /
            Policies:
            - PolicyName: ecs-service-autoscaling
              PolicyDocument:
                  Statement:
                      Effect: Allow
                      Action:
                      - application-autoscaling:*
                      - cloudwatch:DescribeAlarms
                      - cloudwatch:PutMetricAlarm
                      - ecs:DescribeServices
                      - ecs:UpdateService
                      Resource: "*"

    ECSTaskExecutionRole:
        Type: AWS::IAM::Role
        Properties:
            AssumeRolePolicyDocument:
                Statement:
                - Effect: Allow
                  Principal:
                    Service: [ecs-tasks.amazonaws.com]
                  Action: ['sts:AssumeRole']
                Path: /
                Policies:
                - PolicyName: AmazonECSTaskExecutionRolePolicy
                  PolicyDocument:
                    Statement:
                    - Effect: Allow
                      Action:
                      # Allow the ECS Tasks to download images from ECR
                      - 'ecr:GetAuthorizationToken'
                      - 'ecr:BatchCheckLayerAvailability'
                      - 'ecr:GetDownloadUrlForLayer'
                      - 'ecr:BatchGetImage'
                      # Allow the ECS tasks to upload logs to CloudWatch
                      - 'logs:CreateLogStream'
                      - 'logs:PutLogEvents'
                      Resource: '*'

    ECSProductTaskRole:
        Type: AWS::IAM::Role
        DependsOn: ECSUserinfoTaskRole
        Properties:
            RoleName: !Sub ecs-genre-task-role-${AWS::StackName}
            Path: /
            AssumeRolePolicyDocument:
                Version: '2012-10-17'
                Statement:
                    Action:
                    - 'sts:AssumeRole'
                    Effect: Allow
                    Principal:
                        Service:
                        - ecs-tasks.amazonaws.com

    ECSWebsiteTaskRole:
        Type: AWS::IAM::Role
        DependsOn: ECSUserinfoTaskRole
        Properties:
            RoleName: !Sub ecs-genre-task-role-${AWS::StackName}
            Path: /
            AssumeRolePolicyDocument:
                Version: '2012-10-17'
                Statement:
                    Action:
                    - 'sts:AssumeRole'
                    Effect: Allow
                    Principal:
                        Service:
                        - ecs-tasks.amazonaws.com

Outputs:

    Cluster:
        Description: A reference to the ECS cluster
        Value: !Ref ECSCluster

    ECSServiceAutoScalingRole:
        Description: A reference to ECS service auto scaling role
        Value: !GetAtt ECSServiceAutoScalingRole.Arn

    ECSAutoScalingGroupName:
        Description: A reference to ECS AutoScaling Group Name
        Value: !Ref ECSAutoScalingGroup

    ECSTaskExecutionRole:
        Description: A reference to ECS task execution role
        Value: !Ref ECSTaskExecutionRole

    ECSProductTaskRole:
        Description: A reference to ECS Product role
        Value: !Ref ECSProductTaskRole

    ECSWebsiteTaskRole:
        Description: A reference to ECS Website role
        Value: !Ref ECSWebsiteTaskRole
